@model mamibags.Models.tbl_Products

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .flex-center {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
</style>

@using (Html.BeginForm("Edit","Products", FormMethod.Post, new {@enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
   <div class="flex-center ">
      <div class="card mt-3" style="width: 35rem;">
        <div class="card-header">
            <h2>Edit Product</h2>  <!-- Card header for product details -->
        </div>
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductID)

            <div class="form-group">
                @Html.LabelFor(model => model.Pname, htmlAttributes: new { @class = "control-label" ,style= "font-weight: bold;" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label ", style = "font-weight: bold;" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label ", style = "font-weight: bold;" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label ", style = "font-weight: bold;" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label ", style = "font-weight: bold;" })
                <div class="col-md-10">
                    <input type="file" name="imageFile" />
                    @*@Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" /> |  @Html.ActionLink("Back to List", "Admin")
            </div>
        </div>

    </div>
  </div>
}
